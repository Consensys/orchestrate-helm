{{- if .Values.txSender.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orchestrate.txSender.fullname" . }}
  labels:
    {{- include "orchestrate.txSender.labels" . | nindent 4 }}
  annotations:
    {{- include "orchestrate.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.txSender.replicaCount }}
  selector:
    matchLabels:
      {{- include "orchestrate.txSender.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "orchestrate.txSender.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/tx-sender/configmap-env.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/tx-sender/secret-env.yaml") . | sha256sum }}
        {{- if .Values.txSender.podAnnotations}}
          {{- toYaml .Values.txSender.podAnnotations | nindent 8 }}
        {{- end}}
    spec:
      {{- if .Values.global.imageCredentials }}
      imagePullSecrets:
        - name: {{ include "orchestrate.imagePullSecretName" . }}
      {{- end }}
      serviceAccountName: {{ include "orchestrate.txSender.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.txSender.podSecurityContext | nindent 8 }}
      containers:
        - name: tx-sender
          securityContext:
            {{- toYaml .Values.txSender.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "orchestrate.txSender.fullname" . }}-envmap
            {{- if or .Values.txSender.environmentSecrets .Values.global.environmentSecrets }}
            - secretRef:
                name: {{ include "orchestrate.txSender.fullname" . }}-secretmap
                optional: true
            {{- end }}
            {{- if .Values.global.existingSecret }}
            - secretRef:
                name: {{ .Values.global.existingSecret }}
                optional: true
            {{- end }}
            {{- if .Values.txSender.existingSecret }}
            - secretRef:
                name: {{ .Values.txSender.existingSecret }}
                optional: true
            {{- end }}
          command:
            - /go/bin/main
          args:
            - tx-sender
            - run
          ports:
            - name: http-svc
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /live
              port: http-svc
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http-svc
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            {{- toYaml .Values.txSender.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.global.tls.enabled }}
            - name: qkm-certs
              mountPath: /certificates
              readOnly: true
          {{- end }}      
      volumes:
      {{- if .Values.global.tls.enabled }}
        - name: qkm-certs
          secret:
            secretName: {{ .Values.global.tls.client.secretName }}
      {{- end }}
      {{- with .Values.txSender.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.txSender.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.txSender.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
