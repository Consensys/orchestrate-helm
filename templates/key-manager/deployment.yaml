{{- if .Values.keyManager.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orchestrate.keyManager.fullname" . }}
  labels:
    {{- include "orchestrate.keyManager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.keyManager.replicaCount }}
  selector:
    matchLabels:
      {{- include "orchestrate.keyManager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "orchestrate.keyManager.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/vault-agent-config: {{ include (print $.Template.BasePath "/key-manager/configmap-vault-agent.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/key-manager/configmap-env.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/key-manager/secret-env.yaml") . | sha256sum }}
        {{- if .Values.keyManager.podAnnotations}}
          {{- toYaml .Values.keyManager.podAnnotations | nindent 8 }}
        {{- end}}
    spec:
      {{- if .Values.global.imageCredentials }}
      imagePullSecrets:
        - name: {{ include "orchestrate.imagePullSecretName" . }}
      {{- end }}
      serviceAccountName: {{ include "orchestrate.keyManager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.keyManager.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.keyManager.vaultAgent.enabled }}
        - name: vault-agent
          securityContext:
            capabilities:
              add:
              - IPC_LOCK
          image: "{{ .Values.keyManager.vaultAgent.image.repository }}:{{ .Values.keyManager.vaultAgent.image.tag }}"
          command: [ "/bin/sh" ]
          args:
            - "-c"
            - |
              set -e
              cfg=/vault/config/agent-config.hcl
              agent_pid=
              function start_agent() {
                /usr/local/bin/docker-entrypoint.sh agent -config ${cfg} &
                agent_pid=$!
              }
              function stop_agent() {
                kill -15 ${agent_pid}
              }
              # Main
              while :; do
               start_agent
               echo -e "HTTP/1.1 200 OK\n\n $(date)" | nc -l -p 9999
               stop_agent
              done
          env:
            - name: SKIP_CHOWN
              value: "true"
          envFrom:
            - configMapRef:
                name: {{ include "orchestrate.keyManager.fullname" . }}-envmap
            {{- if or .Values.keyManager.environmentSecrets .Values.global.environmentSecrets }}
            - secretRef:
                name: {{ include "orchestrate.keyManager.fullname" . }}-secretmap
                optional: true
            {{- end }}
          volumeMounts:
            - name: vault-token
              mountPath: /vault/token
            - name: vault-config
              mountPath: /vault/config
        {{- end }}
        - name: key-manager
          securityContext:
            {{- toYaml .Values.keyManager.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "orchestrate.keyManager.fullname" . }}-envmap
            {{- if or .Values.keyManager.environmentSecrets .Values.global.environmentSecrets }}
            - secretRef:
                name: {{ include "orchestrate.keyManager.fullname" . }}-secretmap
                optional: true
            {{- end }}
            {{- if .Values.global.existingSecret }}
            - secretRef:
                name: {{ .Values.global.existingSecret }}
                optional: true
            {{- end }}
            {{- if .Values.keyManager.existingSecret }}
            - secretRef:
                name: {{ .Values.keyManager.existingSecret }}
                optional: true
            {{- end }}
          command:
            - /go/bin/main
          args:
            - key-manager
            - run
          ports:
            - name: http-svc
              containerPort: 8081
              protocol: TCP
            - name: http-metrics
              containerPort: 8082
              protocol: TCP
          lifecycle:
            postStart:
              httpGet:
                port: 9999
                path: /
          livenessProbe:
            httpGet:
              path: /live
              port: http-metrics
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
          resources:
            {{- toYaml .Values.keyManager.resources | nindent 12 }}
          {{- if .Values.keyManager.vaultAgent.enabled }}
          volumeMounts:
            - name: vault-token
              mountPath: /vault/token
          {{- end }}
      {{- if .Values.keyManager.vaultAgent.enabled }}
      volumes:
        - name: vault-token
          emptyDir:
            sizeLimit: 1M
        - name: vault-config
          configMap:
            name: {{ include "orchestrate.keyManager.fullname" . }}-vault-agent
      {{ end }}
      {{- with .Values.keyManager.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.keyManager.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.keyManager.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
